/*

undefined
MaaS error reason definition

!!! AUTO GENERATED BY CONVERT.TS REFRAIN FROM MANUAL EDITING !!!

*/

import * as t from 'io-ts';

type Defined =
  | Record<string, unknown>
  | Array<unknown>
  | string
  | boolean
  | number
  | null;
const Defined = t.union([
  t.UnknownRecord,
  t.UnknownArray,
  t.string,
  t.boolean,
  t.number,
  t.null,
]);

export const schemaId = 'http://maasglobal.com/core/components/reason.json';

// Reason
// The default export. More information at the top.
export type Reason = t.Branded<
  {
    text?: string;
    errorCode?: string | number;
    cause?: Array<unknown> & {
      errorCode: Defined;
    };
  },
  ReasonBrand
>;
export const Reason = t.brand(
  t.partial({
    text: t.string,
    errorCode: t.union([t.string, t.number]),
    cause: t.intersection([
      t.UnknownArray,
      t.type({
        errorCode: Defined,
      }),
    ]),
  }),
  (
    x,
  ): x is t.Branded<
    {
      text?: string;
      errorCode?: string | number;
      cause?: Array<unknown> & {
        errorCode: Defined;
      };
    },
    ReasonBrand
  > => true,
  'Reason',
);
export interface ReasonBrand {
  readonly Reason: unique symbol;
}

export default Reason;

// Success
