{
  "$schema": "http://json-schema.org/draft-04/schema#",
  "id": "https://api.maas.global/maas-backend/subscriptions/customer",
  "description": "MaaS contact (customer and user) schema",
  "definitions": {
    "newContact": {
      "allOf": [
        {
          "type": "object",
          "properties": {
            "identityId": {
              "description": "Customer identity id - currently an AWS identityId",
              "type": "string",
              "pattern": "^[aepus]{2}-[\\w]{4}-\\d:[a-f\\d]{8}(-[a-f\\d]{4}){3}-[a-f\\d]{12}$"
            },
            "firstName": {
              "type": "string",
              "pattern": "^[A-Ö][a-ö]*([\\s'\\-]?[A-Ö][a-ö]*)+$",
              "maxLength": 255
            },
            "lastName": {
              "type": "string",
              "pattern": "^[A-Ö][a-ö]*([\\s'\\-]?[A-Ö][a-ö]*)+$",
              "maxLength": 255
            },
            "address": {
              "description": "Street address (and optional number), http://www.bitboost.com/ref/international-address-formats.html",
              "type": "string",
              "pattern": "^([A-ö\\d]+[`'´\\(\\)\\-/,\\.]?)+(\\s?[A-ö\\d`'´\\(\\)\\-/,\\.]?)*$"
            },
            "city": {
              "description": "Alphabetic city name",
              "type": "string",
              "pattern": "^[A-ö\\s`'´]+$"
            },
            "zipCode": {
              "description": "Numeric zip code, see https://en.wikipedia.org/wiki/Postal_code",
              "type": "string",
              "pattern": "^(\\d{3,10}|[A-Z\\d]{2,4}(\\s[A-Z\\d]{2,4}){1,2})$"
            },
            "country": {
              "description": "ISO 3166-1 alpha-2 country code, see https://en.wikipedia.org/wiki/ISO_3166-1_alpha-2",
              "type": "string",
              "pattern": "^[A-Z]{2,2}$$"
            },
            "phone": {
              "description": "ITU-T E.164 phone number, see https://www.safaribooksonline.com/library/view/regular-expressions-cookbook/9781449327453/ch04s03.html",
              "type": "string",
              "pattern": "^\\+(?:\\d){6,14}\\d$"
            },
            "email": {
              "description": "Rough validation of a valid e-mail address, see https://davidcel.is/posts/stop-validating-email-addresses-with-regex/",
              "type": "string",
              "pattern": "^.+@.+\\..+$"
            }
          }
        },
        {
          "type": "object",
          "properties": {
            "paymentMethod": {
              "oneOf": [
                {
                  "description": "The payment (gateway) method info; no credit cards here",
                  "type": "object",
                  "properties": {
                    "type": {
                      "type": "string",
                      "enum": [
                        "stripe"
                      ]
                    },
                    "token": {
                      "description": "Stripe based payment method",
                      "type": "string",
                      "minLength": 1,
                      "maxLength": 1024
                    }
                  },
                  "required": [
                    "type",
                    "token"
                  ]
                },
                {
                  "description": "Credit card based payment (only for testing)",
                  "type": "object",
                  "properties": {
                    "type": {
                      "type": "string",
                      "enum": [
                        "card"
                      ]
                    },
                    "number": {
                      "type": "string",
                      "description": "Credit card numbers, see http://www.regular-expressions.info/creditcard.html",
                      "pattern": "^(?:4[0-9]{12}(?:[0-9]{3})?|(?:5[1-5][0-9]{2}|222[1-9]|22[3-9][0-9]|2[3-6][0-9]{2}|27[01][0-9]|2720)[0-9]{12}|3[47][0-9]{13}|3(?:0[0-5]|[68][0-9])[0-9]{11}|6(?:011|5[0-9]{2})[0-9]{12}|(?:2131|1800|35\\d{3})\\d{11})$"
                    },
                    "expiryMonth": {
                      "type": "integer",
                      "minValue": 1,
                      "maxValue": 12
                    },
                    "expiryYear": {
                      "type": "integer",
                      "minValue": 2017,
                      "maxValue": 2030
                    },
                    "cvv": {
                      "type": "string",
                      "pattern": "^[0-9]{3,4}$"
                    }
                  },
                  "required": [
                    "type",
                    "number",
                    "expiryMonth",
                    "expiryYear",
                    "cvv"
                  ]
                }
              ]
            }
          }
        }
      ],
      "required": [
        "identityId",
        "phone"
      ]
    },
    "contactUpdate": {
      "allOf": [
        {
          "type": "object",
          "properties": {
            "identityId": {
              "description": "Customer identity id - currently an AWS identityId",
              "type": "string",
              "pattern": "^[aepus]{2}-[\\w]{4}-\\d:[a-f\\d]{8}(-[a-f\\d]{4}){3}-[a-f\\d]{12}$"
            },
            "firstName": {
              "type": "string",
              "pattern": "^[A-Ö][a-ö]*([\\s'\\-]?[A-Ö][a-ö]*)+$",
              "maxLength": 255
            },
            "lastName": {
              "type": "string",
              "pattern": "^[A-Ö][a-ö]*([\\s'\\-]?[A-Ö][a-ö]*)+$",
              "maxLength": 255
            },
            "address": {
              "description": "Street address (and optional number), http://www.bitboost.com/ref/international-address-formats.html",
              "type": "string",
              "pattern": "^([A-ö\\d]+[`'´\\(\\)\\-/,\\.]?)+(\\s?[A-ö\\d`'´\\(\\)\\-/,\\.]?)*$"
            },
            "city": {
              "description": "Alphabetic city name",
              "type": "string",
              "pattern": "^[A-ö\\s`'´]+$"
            },
            "zipCode": {
              "description": "Numeric zip code, see https://en.wikipedia.org/wiki/Postal_code",
              "type": "string",
              "pattern": "^(\\d{3,10}|[A-Z\\d]{2,4}(\\s[A-Z\\d]{2,4}){1,2})$"
            },
            "country": {
              "description": "ISO 3166-1 alpha-2 country code, see https://en.wikipedia.org/wiki/ISO_3166-1_alpha-2",
              "type": "string",
              "pattern": "^[A-Z]{2,2}$$"
            },
            "phone": {
              "description": "ITU-T E.164 phone number, see https://www.safaribooksonline.com/library/view/regular-expressions-cookbook/9781449327453/ch04s03.html",
              "type": "string",
              "pattern": "^\\+(?:\\d){6,14}\\d$"
            },
            "email": {
              "description": "Rough validation of a valid e-mail address, see https://davidcel.is/posts/stop-validating-email-addresses-with-regex/",
              "type": "string",
              "pattern": "^.+@.+\\..+$"
            }
          }
        },
        {
          "type": "object",
          "properties": {
            "paymentMethod": {
              "oneOf": [
                {
                  "description": "The payment (gateway) method info; no credit cards here",
                  "type": "object",
                  "properties": {
                    "type": {
                      "type": "string",
                      "enum": [
                        "stripe"
                      ]
                    },
                    "token": {
                      "description": "Stripe based payment method",
                      "type": "string",
                      "minLength": 1,
                      "maxLength": 1024
                    }
                  },
                  "required": [
                    "type",
                    "token"
                  ]
                },
                {
                  "description": "Credit card based payment (only for testing)",
                  "type": "object",
                  "properties": {
                    "type": {
                      "type": "string",
                      "enum": [
                        "card"
                      ]
                    },
                    "number": {
                      "type": "string",
                      "description": "Credit card numbers, see http://www.regular-expressions.info/creditcard.html",
                      "pattern": "^(?:4[0-9]{12}(?:[0-9]{3})?|(?:5[1-5][0-9]{2}|222[1-9]|22[3-9][0-9]|2[3-6][0-9]{2}|27[01][0-9]|2720)[0-9]{12}|3[47][0-9]{13}|3(?:0[0-5]|[68][0-9])[0-9]{11}|6(?:011|5[0-9]{2})[0-9]{12}|(?:2131|1800|35\\d{3})\\d{11})$"
                    },
                    "expiryMonth": {
                      "type": "integer",
                      "minValue": 1,
                      "maxValue": 12
                    },
                    "expiryYear": {
                      "type": "integer",
                      "minValue": 2017,
                      "maxValue": 2030
                    },
                    "cvv": {
                      "type": "string",
                      "pattern": "^[0-9]{3,4}$"
                    }
                  },
                  "required": [
                    "type",
                    "number",
                    "expiryMonth",
                    "expiryYear",
                    "cvv"
                  ]
                }
              ]
            }
          }
        }
      ],
      "required": [
        "identityId",
        "city",
        "country",
        "zipCode"
      ]
    },
    "contactResponse": {
      "allOf": [
        {
          "type": "object",
          "properties": {
            "identityId": {
              "description": "Customer identity id - currently an AWS identityId",
              "type": "string",
              "pattern": "^[aepus]{2}-[\\w]{4}-\\d:[a-f\\d]{8}(-[a-f\\d]{4}){3}-[a-f\\d]{12}$"
            },
            "firstName": {
              "type": "string",
              "pattern": "^[A-Ö][a-ö]*([\\s'\\-]?[A-Ö][a-ö]*)+$",
              "maxLength": 255
            },
            "lastName": {
              "type": "string",
              "pattern": "^[A-Ö][a-ö]*([\\s'\\-]?[A-Ö][a-ö]*)+$",
              "maxLength": 255
            },
            "address": {
              "description": "Street address (and optional number), http://www.bitboost.com/ref/international-address-formats.html",
              "type": "string",
              "pattern": "^([A-ö\\d]+[`'´\\(\\)\\-/,\\.]?)+(\\s?[A-ö\\d`'´\\(\\)\\-/,\\.]?)*$"
            },
            "city": {
              "description": "Alphabetic city name",
              "type": "string",
              "pattern": "^[A-ö\\s`'´]+$"
            },
            "zipCode": {
              "description": "Numeric zip code, see https://en.wikipedia.org/wiki/Postal_code",
              "type": "string",
              "pattern": "^(\\d{3,10}|[A-Z\\d]{2,4}(\\s[A-Z\\d]{2,4}){1,2})$"
            },
            "country": {
              "description": "ISO 3166-1 alpha-2 country code, see https://en.wikipedia.org/wiki/ISO_3166-1_alpha-2",
              "type": "string",
              "pattern": "^[A-Z]{2,2}$$"
            },
            "phone": {
              "description": "ITU-T E.164 phone number, see https://www.safaribooksonline.com/library/view/regular-expressions-cookbook/9781449327453/ch04s03.html",
              "type": "string",
              "pattern": "^\\+(?:\\d){6,14}\\d$"
            },
            "email": {
              "description": "Rough validation of a valid e-mail address, see https://davidcel.is/posts/stop-validating-email-addresses-with-regex/",
              "type": "string",
              "pattern": "^.+@.+\\..+$"
            }
          }
        },
        {
          "type": "object",
          "properties": {
            "paymentMethod": {
              "description": "The payment (gateway) method info; no credit cards here",
              "type": "object",
              "properties": {
                "type": {
                  "type": "string"
                },
                "valid": {
                  "description": "Whether the payment method is valid and working",
                  "type": "boolean"
                }
              },
              "required": [
                "type",
                "valid"
              ]
            }
          }
        }
      ],
      "required": [
        "identityId",
        "phone"
      ]
    },
    "contactBase": {
      "type": "object",
      "properties": {
        "identityId": {
          "description": "Customer identity id - currently an AWS identityId",
          "type": "string",
          "pattern": "^[aepus]{2}-[\\w]{4}-\\d:[a-f\\d]{8}(-[a-f\\d]{4}){3}-[a-f\\d]{12}$"
        },
        "firstName": {
          "type": "string",
          "pattern": "^[A-Ö][a-ö]*([\\s'\\-]?[A-Ö][a-ö]*)+$",
          "maxLength": 255
        },
        "lastName": {
          "type": "string",
          "pattern": "^[A-Ö][a-ö]*([\\s'\\-]?[A-Ö][a-ö]*)+$",
          "maxLength": 255
        },
        "address": {
          "description": "Street address (and optional number), http://www.bitboost.com/ref/international-address-formats.html",
          "type": "string",
          "pattern": "^([A-ö\\d]+[`'´\\(\\)\\-/,\\.]?)+(\\s?[A-ö\\d`'´\\(\\)\\-/,\\.]?)*$"
        },
        "city": {
          "description": "Alphabetic city name",
          "type": "string",
          "pattern": "^[A-ö\\s`'´]+$"
        },
        "zipCode": {
          "description": "Numeric zip code, see https://en.wikipedia.org/wiki/Postal_code",
          "type": "string",
          "pattern": "^(\\d{3,10}|[A-Z\\d]{2,4}(\\s[A-Z\\d]{2,4}){1,2})$"
        },
        "country": {
          "description": "ISO 3166-1 alpha-2 country code, see https://en.wikipedia.org/wiki/ISO_3166-1_alpha-2",
          "type": "string",
          "pattern": "^[A-Z]{2,2}$$"
        },
        "phone": {
          "description": "ITU-T E.164 phone number, see https://www.safaribooksonline.com/library/view/regular-expressions-cookbook/9781449327453/ch04s03.html",
          "type": "string",
          "pattern": "^\\+(?:\\d){6,14}\\d$"
        },
        "email": {
          "description": "Rough validation of a valid e-mail address, see https://davidcel.is/posts/stop-validating-email-addresses-with-regex/",
          "type": "string",
          "pattern": "^.+@.+\\..+$"
        }
      }
    },
    "identityId": {
      "description": "Customer identity id - currently an AWS identityId",
      "type": "string",
      "pattern": "^[aepus]{2}-[\\w]{4}-\\d:[a-f\\d]{8}(-[a-f\\d]{4}){3}-[a-f\\d]{12}$"
    },
    "paymentMethodResponse": {
      "description": "The payment (gateway) method info; no credit cards here",
      "type": "object",
      "properties": {
        "type": {
          "type": "string"
        },
        "valid": {
          "description": "Whether the payment method is valid and working",
          "type": "boolean"
        }
      },
      "required": [
        "type",
        "valid"
      ]
    },
    "stripePaymentMethod": {
      "description": "The payment (gateway) method info; no credit cards here",
      "type": "object",
      "properties": {
        "type": {
          "type": "string",
          "enum": [
            "stripe"
          ]
        },
        "token": {
          "description": "Stripe based payment method",
          "type": "string",
          "minLength": 1,
          "maxLength": 1024
        }
      },
      "required": [
        "type",
        "token"
      ]
    },
    "creditCardPaymentMethod": {
      "description": "Credit card based payment (only for testing)",
      "type": "object",
      "properties": {
        "type": {
          "type": "string",
          "enum": [
            "card"
          ]
        },
        "number": {
          "type": "string",
          "description": "Credit card numbers, see http://www.regular-expressions.info/creditcard.html",
          "pattern": "^(?:4[0-9]{12}(?:[0-9]{3})?|(?:5[1-5][0-9]{2}|222[1-9]|22[3-9][0-9]|2[3-6][0-9]{2}|27[01][0-9]|2720)[0-9]{12}|3[47][0-9]{13}|3(?:0[0-5]|[68][0-9])[0-9]{11}|6(?:011|5[0-9]{2})[0-9]{12}|(?:2131|1800|35\\d{3})\\d{11})$"
        },
        "expiryMonth": {
          "type": "integer",
          "minValue": 1,
          "maxValue": 12
        },
        "expiryYear": {
          "type": "integer",
          "minValue": 2017,
          "maxValue": 2030
        },
        "cvv": {
          "type": "string",
          "pattern": "^[0-9]{3,4}$"
        }
      },
      "required": [
        "type",
        "number",
        "expiryMonth",
        "expiryYear",
        "cvv"
      ]
    },
    "newPaymentMethod": {
      "oneOf": [
        {
          "description": "The payment (gateway) method info; no credit cards here",
          "type": "object",
          "properties": {
            "type": {
              "type": "string",
              "enum": [
                "stripe"
              ]
            },
            "token": {
              "description": "Stripe based payment method",
              "type": "string",
              "minLength": 1,
              "maxLength": 1024
            }
          },
          "required": [
            "type",
            "token"
          ]
        },
        {
          "description": "Credit card based payment (only for testing)",
          "type": "object",
          "properties": {
            "type": {
              "type": "string",
              "enum": [
                "card"
              ]
            },
            "number": {
              "type": "string",
              "description": "Credit card numbers, see http://www.regular-expressions.info/creditcard.html",
              "pattern": "^(?:4[0-9]{12}(?:[0-9]{3})?|(?:5[1-5][0-9]{2}|222[1-9]|22[3-9][0-9]|2[3-6][0-9]{2}|27[01][0-9]|2720)[0-9]{12}|3[47][0-9]{13}|3(?:0[0-5]|[68][0-9])[0-9]{11}|6(?:011|5[0-9]{2})[0-9]{12}|(?:2131|1800|35\\d{3})\\d{11})$"
            },
            "expiryMonth": {
              "type": "integer",
              "minValue": 1,
              "maxValue": 12
            },
            "expiryYear": {
              "type": "integer",
              "minValue": 2017,
              "maxValue": 2030
            },
            "cvv": {
              "type": "string",
              "pattern": "^[0-9]{3,4}$"
            }
          },
          "required": [
            "type",
            "number",
            "expiryMonth",
            "expiryYear",
            "cvv"
          ]
        }
      ]
    }
  }
}